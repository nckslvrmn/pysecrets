<!DOCTYPE html>
<html>
<head>
  <title>Secrets</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.min.js" integrity="sha256-ngFW3UnAN0Tnm76mDuu7uUtYEcG3G5H1+zioJw3t+68=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js" integrity="sha256-T/f7Sju1ZfNNfBh7skWn0idlCBcI3RwdLSS4/I7NQKQ=" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha256-L/W5Wfqfa0sdBNIKN9cG6QA5F2qx4qICmU2VgLruv9Y=" crossorigin="anonymous" />
  <style>
    html, body {
      height: 100%;
      background: #bbb;
    }

    .card-signin {
      border: 0;
      border-radius: 1rem;
      box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
      padding: 2rem;
    }

    body {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .fade-enter-active, .fade-leave-active {
      transition: opacity .25s;
    }

    .fade-enter, .fade-leave-to {
      opacity: 0;
    }
  </style>
</head>
<body class="text-left">
  <div id="app" class="card card-signin">
    <h1 class="display-4 text-truncate">Enter Passphrase</h1>
    <h6 class="text-truncate">&nbsp;for the requested secret</h6>
    <br />
    <form @submit="checkForm" class="form-signin">
      <div class="form-group">
        <input type="password" class="form-control" autocomplete="off" placeholder="password" v-model="password" rows="6" />
      </div>
      <br />
      <div class="form-group">
        <input type="submit" class="btn btn-primary btn-lg btn-block" value="Submit">
      </div>
    </form>
    <transition name="fade">
      <section v-if="isError">
        <br />
        <div class="alert alert-danger" role="alert">There was an error retrieving secret</div>
      </section>
    </transition>
    <transition name="fade">
      <section v-if="notFound">
        <br />
        <div class="alert alert-warning" role="alert">Secret has either already been viewed<br />or your passphrase is incorrect.</div>
      </section>
    </transition>
    <transition name="fade">
      <section v-if="secret_data">
        <br />
        <pre id="response" class="mw-50">{{ secret_data }}</pre>
      </section>
    </transition>
  </div>

  <script>
    var app = new Vue({
      el: '#app',
      data: {
        secret_id: window.location.pathname.split('/')[2],
        password: null,
        secret_data: null,
        isError: false,
        notFound: false,
      },
      methods: {
        checkForm: function (e) {
          axios
            .post('https://secret.slvr.io/decrypt', {passphrase: this.password, secret_id: this.secret_id})
            .then((response) => {
              this.isError = false;
              this.notFound = false;
              if (response.data.file_name != null) {
                app.forceFileDownload(response.data);
              } else {
                this.secret_data = response.data.data;
              }
            })
            .catch(error => {
              this.secret_data = null;
              if (error.response.status == 404) {
                this.notFound = true;
              } else {
                this.isError = true;
              }
              console.log(error);
            })
          e.preventDefault();
        },
        forceFileDownload: function (response) {
          const url = window.URL.createObjectURL(app.b64toBlob(response.data));
          const link = document.createElement('a');
          link.href = url;
          link.setAttribute('download', response.file_name);
          document.body.appendChild(link);
          link.click();
        },
        b64toBlob: function(b64Data) {
          sliceSize = 512;
          var byteCharacters = atob(b64Data);
          var byteArrays = [];
          for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            var slice = byteCharacters.slice(offset, offset + sliceSize);
            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
              byteNumbers[i] = slice.charCodeAt(i);
            }
            var byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
          }
          var blob = new Blob(byteArrays);
          return blob;
        }
      }
    })
  </script>
</body>
</html>
