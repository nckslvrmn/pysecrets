<!DOCTYPE html>
<html>
<head>
  <title>Secrets</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css" integrity="sha512-P5MgMn1jBN01asBgU0z60Qk4QxiXo86+wlFahKrsQf37c9cro517WzVSPPV1tDKzhku2iJ2FVgL67wG03SGnNA=="
    crossorigin="anonymous" />
  <style>
    html,
    body {
      height: 100%;
      background: #bbb;
    }

    body {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .card-signin {
      border: 0;
      border-radius: 1rem;
      box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);
      padding: 2rem;
    }

    #results {
      opacity: 0;
      transition: opacity .5s;
    }

    #results.active {
      opacity: 1;
    }
  </style>
</head>
<body class="text-left">
  <div class="card card-signin">
    <h1 class="display-4 text-truncate">Enter Passphrase</h1>
    <h6 class="text-truncate">&nbsp;for the requested secret</h6>
    <br />
    <form onsubmit="getSecret()" id="form" class="form-signin">
      <div class="form-group">
        <input type="password" name="password" class="form-control" autocomplete="off" placeholder="password" rows="6" />
      </div>
      <br />
      <div class="form-group">
        <input type="submit" class="btn btn-primary btn-lg btn-block" value="Submit">
      </div>
    </form>
    <div id="results"></div>
  </div>

  <script>
    function getSecret(e) {
      event.preventDefault();
      var form = new FormData(document.getElementById("form"));
      var password = form.get("password");
      var secret_id = window.location.pathname.split("/")[2];
      var results = document.getElementById("results");
      results.classList.remove('active')
      fetch('https://secret.slvr.io/decrypt', {
          method: "post",
          body: JSON.stringify({
            passphrase: password,
            secret_id: secret_id
          })
        })
        .then(resp => {
          if (resp.ok) {
            return resp.json();
          } else if (resp.status == 404) {
            var respHTML = '<br /><div class="alert alert-warning" role="alert">Secret has either already been viewed<br />or your passphrase is incorrect.</div>';
            results.innerHTML = respHTML;
          }
        })
        .then(function(data) {
          if (data.file_name != null) {
            forceFileDownload(data);
          } else {
            var respHTML = `<br /><pre id="response" class="mw-50">${data.data}</pre>`;
            results.innerHTML = respHTML;
          }
        })
        .catch((error) => {
          var respHTML = '<br /><div class="alert alert-danger" role="alert">There was an error retrieving secret</div>';
          results.innerHTML = respHTML;
        });
      results.classList.add("active");
    }


    function forceFileDownload(response) {
      const url = window.URL.createObjectURL(b64toBlob(response.data));
      const link = document.createElement('a');
      link.href = url;
      link.setAttribute('download', response.file_name);
      document.body.appendChild(link);
      link.click();
    }

    function b64toBlob(b64Data) {
      sliceSize = 512;
      var byteCharacters = atob(b64Data);
      var byteArrays = [];
      for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);
        var byteNumbers = new Array(slice.length);
        for (var i = 0; i < slice.length; i++) {
          byteNumbers[i] = slice.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        byteArrays.push(byteArray);
      }
      var blob = new Blob(byteArrays);
      return blob;
    }
  </script>
</body>
</html>
